/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Cajero;

import static Cajero.Metodos.formatearFecha;
import Conexion_bd.Conexion;
import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;


/**
 *
 * @author Miguel
 */
public class RealizarTransferencia extends javax.swing.JFrame {

    /**
     * Creates new form Opciones_admin
     */

    public RealizarTransferencia (Sesion sesion_usuario,int cuenta) {
        initComponents();
        this.Nombre = sesion_usuario.getNombre();
        this.pin = sesion_usuario.getPin();
        this.cuenta = cuenta;
        this.idioma=sesion_usuario.getIdioma();
        cargarIdioma(this.idioma);
        this.Sesion = sesion_usuario;
        this.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                sesion_usuario.mantenerSesion();
            }
        });
        this.fecha = LocalDate.now();
        sesion_usuario.setFrameActual(this);
        jPanel2.setBackground(new Color(0, 0, 0, 0));
        jPanel1.setBackground(new Color(0, 0, 0, 0));
    }
   public void cargarIdioma(Idioma idioma){
        Properties propiedades = new Idioma(idioma.getNombre());
        this.setTitle(propiedades.getProperty("RealizarTransferencia"));
        btnTransferencia2.setText(propiedades.getProperty("btnTransferencia2"));
        lblCuentaBeneficiaria.setText(propiedades.getProperty("lblCuentaBeneficiaria"));
        lblNombreApellido.setText(propiedades.getProperty("lblNombreApellido"));
        lblImporte.setText(propiedades.getProperty("lblImporte"));
        lblConfirmar.setText(propiedades.getProperty("lblConfirmar"));
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblCuentaBeneficiaria = new javax.swing.JLabel();
        txfCuenta = new javax.swing.JTextField();
        lblNombreApellido = new javax.swing.JLabel();
        txfNombre = new javax.swing.JTextField();
        lblImporte = new javax.swing.JLabel();
        txfImporte = new javax.swing.JTextField();
        lblConfirmar = new javax.swing.JLabel();
        txfPIN = new javax.swing.JPasswordField();
        jPanel2 = new javax.swing.JPanel();
        btnRetroceder = new javax.swing.JButton();
        btnTransferencia2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Usuario");
        setLocation(new java.awt.Point(0, 0));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new java.awt.GridLayout(4, 2, 10, 10));

        lblCuentaBeneficiaria.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblCuentaBeneficiaria.setForeground(new java.awt.Color(0, 0, 0));
        lblCuentaBeneficiaria.setText("Cuenta beneficiaria:");
        jPanel1.add(lblCuentaBeneficiaria);
        jPanel1.add(txfCuenta);

        lblNombreApellido.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblNombreApellido.setForeground(new java.awt.Color(0, 0, 0));
        lblNombreApellido.setText("Nombre y apellido:");
        jPanel1.add(lblNombreApellido);
        jPanel1.add(txfNombre);

        lblImporte.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblImporte.setForeground(new java.awt.Color(0, 0, 0));
        lblImporte.setText("Importe:");
        jPanel1.add(lblImporte);
        jPanel1.add(txfImporte);

        lblConfirmar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblConfirmar.setForeground(new java.awt.Color(0, 0, 0));
        lblConfirmar.setText("Confirmar PIN:");
        jPanel1.add(lblConfirmar);
        jPanel1.add(txfPIN);

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 540, 240));

        jPanel2.setLayout(new java.awt.GridLayout(1, 0, 250, 0));

        btnRetroceder.setBackground(new java.awt.Color(255, 255, 255));
        btnRetroceder.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnRetroceder.setForeground(new java.awt.Color(0, 0, 0));
        btnRetroceder.setText("Retroceder");
        btnRetroceder.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnRetroceder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRetrocederActionPerformed(evt);
            }
        });
        jPanel2.add(btnRetroceder);

        btnTransferencia2.setBackground(new java.awt.Color(51, 255, 51));
        btnTransferencia2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnTransferencia2.setForeground(new java.awt.Color(0, 0, 0));
        btnTransferencia2.setText("Transferir");
        btnTransferencia2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnTransferencia2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTransferencia2ActionPerformed(evt);
            }
        });
        jPanel2.add(btnTransferencia2);

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, 540, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/fondo_admin.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 610, 350));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnRetrocederActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRetrocederActionPerformed
        Opciones_usuario Opciones_usuario = new Opciones_usuario(this.Sesion);
        Opciones_usuario.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnRetrocederActionPerformed

    private void btnTransferencia2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTransferencia2ActionPerformed
        if(txfCuenta.getText().isEmpty() || txfNombre.getText().isEmpty() || txfImporte.getText().isEmpty() || txfPIN.getPassword().length==0){
            JOptionPane.showMessageDialog(this, "Debe completar todos los campos para poder realizar la transferencia", "Error", JOptionPane.ERROR_MESSAGE);
        }else{
            try {
            //COMPROBAR NOMBRE Y CUENTA
            Connection conexionNombre = Conexion.mySQL("proyecto_final", "root", "");
            Statement sentenciaNombre = conexionNombre.createStatement();
            String sqlNombre = "SELECT cuentas.ID_Cuenta, CONCAT(clientes.Nombre, ' ', clientes.Apellido) AS NombreApellido FROM clientes JOIN cuentas ON clientes.ID_Cliente = cuentas.ID_Cliente WHERE cuentas.ID_Cuenta ='"+txfCuenta.getText()+"' AND CONCAT(clientes.Nombre, ' ', clientes.Apellido) = '"+txfNombre.getText()+"'";
            ResultSet resultadoNombre = sentenciaNombre.executeQuery(sqlNombre);
            if(resultadoNombre.next()){
                String cuenta = resultadoNombre.getString("ID_Cuenta");
                String nombre = resultadoNombre.getString("NombreApellido");
            }else{
                JOptionPane.showMessageDialog(this, "La cuenta no coincide con el nombre y apellido", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            //COMPROBAR PIN
            char[] pin =txfPIN.getPassword();
            String sPin = new String(pin);
            int intPin = Integer.parseInt(sPin);
            if(intPin!=this.Sesion.getPin()){
                JOptionPane.showMessageDialog(this, "El PIN no es valido", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            //COMPROBAR IMPORTE
            Connection conexionImporte = Conexion.mySQL("proyecto_final", "root", "");
            Statement sentenciaImporte = conexionImporte.createStatement();
            String sqlImporte = "SELECT saldo FROM cuentas WHERE ID_Cuenta ="+this.cuenta+"";
            ResultSet resultadoImporte = sentenciaImporte.executeQuery(sqlImporte);
            if(resultadoImporte.next()){
                int saldo = resultadoImporte.getInt("Saldo");
                int importe = Integer.parseInt(txfImporte.getText());
                //COMPARAR SALDO DE LA CUENTA CON IMPORTE INTRODUCIDO
                if(importe>saldo){
                    JOptionPane.showMessageDialog(this, "No hay dinero suficiente en la cuenta para realizar la transferencia", "Error", JOptionPane.ERROR_MESSAGE);
                }else{
                    int respuesta=JOptionPane.showConfirmDialog(this,"¿Desea confirmar el envio de la tranferencia?","Confirmación",JOptionPane.YES_NO_OPTION);
                    if(respuesta == JOptionPane.YES_OPTION){
                        
                        //RESTAR IMPORTE DEL SALDO DE CUENTA
                        Connection conexionTransferencia = Conexion.mySQL("proyecto_final", "root", "");
                        Statement sentenciaTransferencia = conexionTransferencia.createStatement();
                        int nuevoSaldo=saldo-importe;
                        String sqlTransferencia = "UPDATE cuentas SET saldo = '"+nuevoSaldo+"' WHERE ID_Cuenta ="+this.cuenta+"";
                        int resultadoTransferencia = sentenciaTransferencia.executeUpdate(sqlTransferencia);
                        
                        //SUMAR EL IMPORTE A LA CUENTA BENEFICIARIA
                        Connection conexionTransferencia2 = Conexion.mySQL("proyecto_final", "root", "");
                        Statement sentenciaTransferencia2 = conexionTransferencia2.createStatement();
                        String sqlTransferencia2 = "UPDATE cuentas SET saldo = saldo+"+importe+" WHERE ID_Cuenta ="+txfCuenta.getText()+";";
                        int resultadoTransferencia2 = sentenciaTransferencia2.executeUpdate(sqlTransferencia2);
                        
                        //COMPROBAR QUE LAS SENTENCIAS SE HAN EJECUTADO BIEN
                        if(resultadoTransferencia>0 && resultadoTransferencia2>0){
                            LocalTime hora= LocalTime.now();
                            DateTimeFormatter formato = DateTimeFormatter.ofPattern("HH:mm:ss");
                            String horaFormateada = formato.format(hora);
                            Connection conexionMovimientos = Conexion.mySQL("proyecto_final", "root", "");
                            Statement sentenciaMovimientos = conexionMovimientos.createStatement();
                            String sqlMovimientos = "INSERT INTO movimientos (ID_Cuenta, ID_Tarjeta, ID_Cliente, Fecha, Hora, Tipo_movimiento, Monto) VALUES ("+this.cuenta+","+this.Sesion.getTarjetaCredito()+","+this.Sesion.getID_Cliente()+",'"+formatearFecha(this.Sesion.getFecha())+"','"+horaFormateada+"','Transferencia',"+importe+");";
                            int resultadoMovimientos = sentenciaMovimientos.executeUpdate(sqlMovimientos);
                            if(resultadoMovimientos>0){
                                    //REPRODUCIR SONIDO SI LA TRANSFERENCIA SE REALIZA CON EXITO
                                    Toolkit.getDefaultToolkit().beep();
                                    JOptionPane.showMessageDialog(this, "La transferencia se ha realizado con exito", "Exito", JOptionPane.INFORMATION_MESSAGE);
                                    txfCuenta.setText("");
                                    txfNombre.setText("");
                                    txfImporte.setText("");
                                    txfPIN.setText("");
                            }else{
                                JOptionPane.showMessageDialog(this, "La transferencia no se ha podido realizar", "Error", JOptionPane.ERROR_MESSAGE);
                            }
                        }else{
                            JOptionPane.showMessageDialog(this, "La transferencia no se ha podido realizar (2)", "Error", JOptionPane.ERROR_MESSAGE);
                        }
                    }else{
                        JOptionPane.showMessageDialog(this, "Has cancelado la transferencia", "Cancelar", JOptionPane.INFORMATION_MESSAGE);
                    }
                }
            }
            } catch (SQLException ex) {
                Logger.getLogger(RealizarTransferencia.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnTransferencia2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RealizarTransferencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RealizarTransferencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RealizarTransferencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RealizarTransferencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new Opciones_usuario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRetroceder;
    private javax.swing.JButton btnTransferencia2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblConfirmar;
    private javax.swing.JLabel lblCuentaBeneficiaria;
    private javax.swing.JLabel lblImporte;
    private javax.swing.JLabel lblNombreApellido;
    private javax.swing.JTextField txfCuenta;
    private javax.swing.JTextField txfImporte;
    private javax.swing.JTextField txfNombre;
    private javax.swing.JPasswordField txfPIN;
    // End of variables declaration//GEN-END:variables
    private String ID_Cliente;
    private String Nombre;
    private String TarjetaCredito;
    private int pin;
    private LocalDate fecha;
    private Sesion Sesion;
    private Idioma idioma;
    private int cuenta;
}
